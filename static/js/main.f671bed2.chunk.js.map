{"version":3,"sources":["Nav.js","Header.js","Footer.js","App.js","Categories.js","Home.js","serviceWorker.js","index.js"],"names":["Nav","className","to","Component","Header","Footer","App","props","state","isLoaded","items","fetch","then","res","json","data","setState","articles","this","map","item","href","url","target","rel","alt","src","urlToImage","title","description","Categories","category","getArticles","newCategory","location","pathname","split","pop","topCategory","getCategory","article","Home","path","component","exact","React","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f671bed2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass Nav extends Component {\r\n\r\n    render() {    \r\n        return (\r\n          <nav className=\"Nav\">\r\n              <div className=\"nav-main\">\r\n                <ul className=\"nav-wrapper\">\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/business\">Business</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/entertainment\">Entertainment</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/general\">General</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/health\">Health</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/science\">Science</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/sports\">Sports</Link>\r\n                  </li>\r\n                  <li className=\"nav-li\">\r\n                    <Link className=\"Nav__link\" to=\"/technology\">Technology</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n          </nav>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {    \r\n        return (\r\n          <nav className=\"home\">\r\n              <div className=\"home-main\">\r\n                <Link className=\"home-link\" to=\"/\">News Today</Link>\r\n              </div>\r\n          </nav>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {    \r\n        return (\r\n          <nav className=\"footer\">\r\n              <div className=\"footer-main\">\r\n                    All content is derived from \"https://newsapi.org/\"\r\n              </div>\r\n          </nav>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Nav from './Nav';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  async componentDidMount() {\n    const apiKey = 'd45cf98059b64c9f826c8dd2c7eb1d76';\n    fetch(`https://newsapi.org/v2/top-headlines?country=us&apiKey=${apiKey}`)\n      .then(res => res.json())\n      .then(\n        (data) => {\n          this.setState({\n            isLoaded: true,\n            items: data.articles\n          });\n        }\n      )\n  }\n\n\n  render() {\n    const { isLoaded, items } = this.state;\n    \n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className='app-main'> \n        <Header />\n        <Nav />\n        \n        <h1 className='trending-header'> Trending Stories  </h1>\n        \n            {items.map(item => (\n              <a className='link-container' href={item.url} target='_blank' rel='noopener noreferrer'>\n                  \n                  <div className='item-container'> \n                    <img alt='Nothing to Show' src={item.urlToImage} />\n                    <h3 className='item-title'> {item.title} </h3>  \n                      <p className='item-description'>\n                        {item.description}\n                      </p>\n                  </div>\n              </a>\n            ))}\n        <Footer />\n        </div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport './App.css';\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      articles: [],\r\n      category: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n      this.getArticles();\r\n  }\r\n\r\n\r\n  getCategory() {\r\n      let category = this.props.location.pathname;\r\n      let newCategory = (category.split(\"/\").pop());\r\n      this.setState({ category: newCategory});\r\n      return newCategory\r\n  }\r\n\r\n  async getArticles() {\r\n    const topCategory = this.getCategory();\r\n    const apiKey = 'd45cf98059b64c9f826c8dd2c7eb1d76';\r\n    fetch(`https://newsapi.org/v2/top-headlines?country=us&category=${topCategory}&apiKey=${apiKey}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (data) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            articles: data.articles,\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { articles, category } = this.state;\r\n      return (\r\n          <div className='categories-main'> \r\n          <Header />\r\n          <h1 className='categories-h1'> Trending in {category} \r\n\r\n          </h1>\r\n              {articles.map(article => (\r\n                <a className='link-container' href={article.url} target='_blank' rel='noopener noreferrer'>\r\n                  <div className='article-container'> \r\n                    <img alt='Nothing to Show' src={article.urlToImage} /> \r\n                    <h3 className='item-title'> {article.title} </h3>  \r\n                      <p className='article-description'>\r\n                        {article.description}\r\n                      </p>\r\n                  </div>\r\n                </a>\r\n            ))}\r\n            <Footer />\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport App from './App';\r\nimport Categories from './Categories';\r\nimport './App.css';\r\n\r\nexport default class Home extends React.Component {\r\n  render() {    \r\n    return (\r\n      <div className=\"App\">\r\n        <HashRouter>\r\n            <Switch>\r\n              <Route path='/' component={App} exact/>\r\n              <Route path='/business' component={Categories} />\r\n              <Route path='/entertainment' component={Categories} />\r\n              <Route path='/general' component={Categories} />\r\n              <Route path='/health' component={Categories} />\r\n              <Route path='/science' component={Categories} />\r\n              <Route path='/sports' component={Categories} />\r\n              <Route path='/technology' component={Categories} />\r\n            </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}